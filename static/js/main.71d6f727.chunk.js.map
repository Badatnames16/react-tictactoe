{"version":3,"sources":["components/Box.js","components/Layout.js","components/Game.js","Logic.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Box","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Layout","boxes","map","box","i","styles","pStyle","color","Game","useState","Array","fill","layout","setLayout","xIsNext","setXisNext","winner","lines","length","x","y","z","checkWinner","Fragment","layoutState","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAEMA,EAAQ,CACVC,WAAY,OACZC,OAAQ,sBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QAcEC,MAVf,YAAkC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAClB,OACI,wBACIT,MAAOA,EACPS,QAASA,EAFb,SAGKD,KCdPR,EAAQ,CACZE,OAAQ,sBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAcDC,MAVf,YAAoC,IAAnBC,EAAkB,EAAlBA,MAAOR,EAAW,EAAXA,QACpB,OACE,qBAAKT,MAAOA,EAAZ,SACGiB,EAAMC,KAAI,SAACC,EAAKC,GAAN,OACT,cAAC,EAAD,CAAaZ,MAAOW,EAAKV,QAAS,kBAAMA,EAAQW,KAAtCA,SCddC,EAAS,CACXV,MAAO,QACPE,OAAQ,aAGNS,EAAS,CACXC,MAAO,SAoCIC,MAhCf,WAEI,MAA4BC,mBAASC,MAAM,GAAGC,KAAK,OAAnD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EClBH,SAAqBf,GAW1B,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CACrC,kBAAkBa,EAAMb,GAAxB,GAAOe,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAMkB,IAAMlB,EAAMkB,KAAOlB,EAAMmB,IAAMnB,EAAMkB,KAAOlB,EAAMoB,GAC1D,OAAOpB,EAAMkB,GAGjB,OAAO,KDCUG,CAAYV,GAe3B,OACI,eAAC,IAAMW,SAAP,WACI,cAAC,EAAD,CAAQtB,MAAOW,EAAQnB,QAdX,SAACW,GACjB,IAAMoB,EAAW,YAAOZ,GAEpBI,GAAUQ,EAAYpB,KAE1BoB,EAAYpB,GAAKU,EAAU,IAAM,IACjCD,EAAUW,GACVT,GAAYD,OAQR,qBAAK9B,MAAOqB,EAAZ,SACI,mBAAGrB,MAAOsB,EAAV,SAAmBU,EAAS,WAAaA,EAAS,gBAC3CF,EAAU,IAAM,a,ME1BxBW,MARf,WACE,OACE,qBAAKC,UAAU,SAAf,SACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.71d6f727.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n    background: '#fff',\n    border: '2px solid lightblue',\n    fontSize: '30px',\n    fontWeight: '800',\n    cursor: 'pointer',\n    outline: 'none'\n}\n\n\nfunction Box({ value, onClick }) {\n    return (\n        <button\n            style={style}\n            onClick={onClick}>\n            {value}\n        </button>\n    ); \n}\n\nexport default Box;\n","import React from 'react';\nimport Box from './Box'\n\nconst style = {\n  border: '4px solid lightblue',\n  borderRadius: '10px',\n  width: '250px',\n  height: '250px',\n  margin: '0 auto',\n  display: 'grid',\n  gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n};\n\n\nfunction Layout({boxes, onClick }) {\n    return (\n      <div style={style}>\n        {boxes.map((box, i) => (\n          <Box key={i} value={box} onClick={() => onClick(i)} />\n      ))} \n      </div>\n    );\n}\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport { checkWinner } from '../Logic';\nimport Layout from './Layout';\n\nconst styles = {\n    width: '200px',\n    margin: '20px auto',\n};\n\nconst pStyle = {\n    color: 'green'\n}\n\n\nfunction Game() {\n\n    const [layout, setLayout] = useState(Array(9).fill(null));\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = checkWinner(layout)\n    \n\n    const handleClick = (i) => {\n        const layoutState = [...layout];\n        // if user clicks on occupied box or if game is won, then return\n        if (winner || layoutState[i]) return;\n        // put an x or O in the clicked box\n        layoutState[i] = xIsNext ? 'X' : 'O';\n        setLayout(layoutState);\n        setXisNext(!xIsNext);\n    }\n\n   \n\n    return (\n        <React.Fragment>\n            <Layout boxes={layout} onClick={handleClick} />\n            <div style={styles}>\n                <p style={pStyle}>{winner ? 'Winner: ' + winner : 'Next Player '\n                    + (xIsNext ? 'X' : 'O')}\n                </p>\n                \n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Game;\n","export function checkWinner(boxes) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [x, y, z] = lines[i];\n    if (boxes[x] && boxes[x] === boxes[y] && boxes[x] === boxes[z]) {\n      return boxes[x];\n    }\n  }\n  return null;\n}\n","import React from 'react';\nimport Game from './components/Game'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"layout\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}